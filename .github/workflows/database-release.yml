name: Database Release

on:
  push:
    tags:
      - 'database-*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 13.1, 14.1 ]
    name: Test
    steps:
      - uses: actions/checkout@v3
      - name: Setup docker-compose
        uses: KengoTODA/actions-setup-docker-compose@v1.0.9
        with:
          version: '1.29.2'
      - name: Running postgres instance for tests
        working-directory: database
        run: docker-compose up -d test-ci
      - name: Waiting for DB to be ready
        working-directory: database
        run: |
          for i in `seq 1 300`; # waiting 5 mins since building postgres first time can take significant time
          do
            docker-compose exec -T test-ci psql --username postgres -c "\t" && echo DB Up && exit 0
            echo -n .
            sleep 1
          done
          echo Failed waiting for DB && exit 1
      - name: Running tests
        working-directory: database
        run: docker-compose exec -T test-ci make test

  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 13.1, 14.1 ]
    needs: [ test ]
    name: Publish
    steps:
      - uses: actions/checkout@v3
      - name: Create Docker tag
        id: create_tag
        uses: InfraWay/gh-create-docker-tag@v3.3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push docker image
        run: |
          IFS=- read service mics <<< ${GITHUB_REF_NAME}
          cd ${service}
          docker build --target=db --build-arg="version=${{ matrix.version }}" -t ${{ steps.create_tag.outputs.name }}-${{ matrix.version }} .
          docker push ${{ steps.create_tag.outputs.name }}-${{ matrix.version }}
