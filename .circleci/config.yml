version: 2
jobs:
  checkout:
    docker:
      - image: circleci/buildpack-deps:curl
    working_directory: ~/postgres
    steps:
      - checkout:
          path: ~/postgres
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/postgres/docker-compose
            chmod +x ~/postgres/docker-compose
      - persist_to_workspace:
          root: .
          paths:
            - .

  test-database:
    docker:
      - image: circleci/buildpack-deps:curl
    working_directory: ~/postgres/database
    steps:
      - attach_workspace:
          at: ~/postgres
      - run:
          name: Copy Docker Compose
          command: |
            sudo mv ~/postgres/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Running postgres instance for tests
          command: docker-compose up -d test-ci
      - run:
          name: Waiting for DB to be ready
          command: |
            for i in `seq 1 300`; # waiting 5 mins since building postgres first time can take significant time
            do
              docker-compose exec test-ci psql --username postgres -c "\t" && echo DB Up && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for DB && exit 1
      - run:
          name: Running tests
          command: docker-compose exec test-ci make test

  publish:
    docker:
      - image: cimg/base:stable
    working_directory: ~/postgres
    steps:
      - attach_workspace:
          at: ~/postgres
      - setup_remote_docker:
          version: 20.10.6
#      - run: |
#          ssh remote-docker \<<EOF
#            sudo bash -c 'echo "{\"experimental\": true}" > /etc/docker/daemon.json'
#            sudo systemctl restart docker
#            sudo docker info
#          EOF
      - run:
          name: Build and push docker image
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            IFS=- read service mics <<< ${CIRCLE_TAG}
            cd ${service}
            image_name=plyo/postgres:${CIRCLE_TAG}-arm
            docker buildx build --target db --platform linux/arm64 -t ${image_name} .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push ${image_name}
#            image_name=plyo/postgres:${CIRCLE_TAG}
#            docker build -t ${image_name} .
#            docker push ${image_name}

workflows:
  version: 2

  database:
    jobs:
      - checkout:
          filters:
            tags:
              only: /database-.*/
#      - test-database:
#          requires:
#            - checkout
#          filters:
#            tags:
#              only: /.*/
      - publish:
          requires:
            - checkout
#            - test-database
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

  publisher_and_backups:
    jobs:
      - checkout:
          filters:
            tags:
              only: /(publisher|backups)-.*/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - checkout
          filters:
            tags:
              only: /.*/
